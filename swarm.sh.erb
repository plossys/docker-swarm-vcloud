#!/bin/bash

myIP=$1

if [ -n "$myIP" ]; then
	echo "Using the following ip addresses:"
	echo "  This swarm node: ${myIP}"
	echo "  Consul server:   <%= consul_ip %>"
	echo "  Docker registry: <%= registry_ip %>"
else
	echo "Error: The ip address of the host must be provided by a parameter."
	exit 1
fi

if [ ! -e /usr/bin/docker ]; then
	curl https://get.docker.com | sh
	sudo usermod -aG docker vagrant
fi

sudo sed -i '/^DOCKER_OPTS.*/d' /etc/default/docker
echo 'DOCKER_OPTS="-H unix:// -H tcp://0.0.0.0:2375 --insecure-registry <%= registry_ip %>:5000 --cluster-store=consul://<%= consul_ip %>:8500 --cluster-advertise=eth0:0"' | sudo tee -a /etc/default/docker
sudo service docker restart

docker kill consul registrator swarm manage registry
docker rm -vf consul registrator swarm manage registry

docker run -d -p 8300:8300 -p 8301:8301 -p 8301:8301/udp -p 8302:8302 -p 8302:8302/udp -p 8400:8400 -p 8500:8500 -p 8600:8600/udp --restart=always --name consul -h $(hostname) progrium/consul -rejoin -advertise ${myIP} -join <%= consul_ip %>

if [ $(hostname) == 'swarm-01' ]; then
	docker run -d --restart=always --name registrator -h $(hostname) -v /var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator consul://${myIP}:8500
fi

docker run -d --restart=always --name swarm swarm join --addr=${myIP}:2375 consul://${myIP}:8500/swarm

if [ $(hostname) == 'swarm-01' ]; then
	docker run -d -p 8333:2375 --restart=always --name manage swarm manage consul://${myIP}:8500/swarm

  # Create internal docker registry to avoid building images (https://docs.docker.com/compose/swarm/#limitations)
	mkdir -p /vagrant/registry-v2
	docker run -d -p 5000:5000 --restart=always --name registry -v "/vagrant/registry-v2:/var/lib/registry" registry:2.3.0
fi
